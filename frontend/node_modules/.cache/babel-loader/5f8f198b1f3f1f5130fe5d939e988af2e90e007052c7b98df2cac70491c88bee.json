{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRScanner=_ref=>{let{isOpen,onScan,onClose}=_ref;const videoRef=useRef(null);const canvasRef=useRef(null);const startCamera=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:'environment'}});if(videoRef.current){videoRef.current.srcObject=stream;}}catch(error){console.error('Error accessing camera:',error);alert('Camera access denied. Please allow camera permissions and try again.');}};const stopCamera=()=>{if(videoRef.current&&videoRef.current.srcObject){const tracks=videoRef.current.srcObject.getTracks();tracks.forEach(track=>track.stop());videoRef.current.srcObject=null;}};const captureAndScan=()=>{if(!videoRef.current||!canvasRef.current)return;const canvas=canvasRef.current;const video=videoRef.current;const context=canvas.getContext('2d');canvas.width=video.videoWidth;canvas.height=video.videoHeight;context.drawImage(video,0,0,canvas.width,canvas.height);// For now, we'll simulate QR scanning by asking user to input manually\n// In a real app, you'd use a QR code library here\nconst qrData=prompt('QR Scanner: Please paste the QR code URL or scan result:');if(qrData){onScan(qrData);}};useEffect(()=>{if(isOpen){startCamera();}else{stopCamera();}return()=>{stopCamera();};},[isOpen]);if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"qr-scanner-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"qr-scanner-popup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"qr-scanner-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCF1 Scan QR Code for Attendance\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-content\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true,playsInline:true,style:{width:'100%',maxWidth:'400px',borderRadius:'8px'}}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{display:'none'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCCD Position the QR code within the camera view\"}),/*#__PURE__*/_jsx(\"button\",{className:\"scan-btn\",onClick:captureAndScan,children:\"\\uD83D\\uDCF7 Capture & Scan QR Code\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8em',color:'#666',marginTop:'10px'},children:\"Alternative: Manually input QR code data when prompted\"})]})]})});};export default QRScanner;","map":{"version":3,"names":["React","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","QRScanner","_ref","isOpen","onScan","onClose","videoRef","canvasRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","error","console","alert","stopCamera","tracks","getTracks","forEach","track","stop","captureAndScan","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","qrData","prompt","className","children","onClick","ref","autoPlay","playsInline","style","maxWidth","borderRadius","display","fontSize","color","marginTop"],"sources":["C:/Users/RIMI/Desktop/eduattend/Atendo-main/frontend/src/components/QRScanner.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst QRScanner = ({ isOpen, onScan, onClose }) => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { facingMode: 'environment' } \r\n      });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing camera:', error);\r\n      alert('Camera access denied. Please allow camera permissions and try again.');\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const tracks = videoRef.current.srcObject.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n  };\r\n\r\n  const captureAndScan = () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n    const context = canvas.getContext('2d');\r\n    \r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    \r\n    // For now, we'll simulate QR scanning by asking user to input manually\r\n    // In a real app, you'd use a QR code library here\r\n    const qrData = prompt('QR Scanner: Please paste the QR code URL or scan result:');\r\n    if (qrData) {\r\n      onScan(qrData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      startCamera();\r\n    } else {\r\n      stopCamera();\r\n    }\r\n    \r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, [isOpen]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"qr-scanner-overlay\">\r\n      <div className=\"qr-scanner-popup\">\r\n        <div className=\"qr-scanner-header\">\r\n          <h3>üì± Scan QR Code for Attendance</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>√ó</button>\r\n        </div>\r\n        <div className=\"scanner-content\">\r\n          <video \r\n            ref={videoRef} \r\n            autoPlay \r\n            playsInline \r\n            style={{ width: '100%', maxWidth: '400px', borderRadius: '8px' }}\r\n          />\r\n          <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n        </div>\r\n        <div className=\"scanner-instructions\">\r\n          <p>üìç Position the QR code within the camera view</p>\r\n          <button \r\n            className=\"scan-btn\"\r\n            onClick={captureAndScan}\r\n          >\r\n            üì∑ Capture & Scan QR Code\r\n          </button>\r\n          <p style={{ fontSize: '0.8em', color: '#666', marginTop: '10px' }}>\r\n            Alternative: Manually input QR code data when prompted\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}